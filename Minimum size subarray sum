#include <bits/stdc++.h>
using namespace std;
class MinSizeSubArraySum
{
public:
          static int minSizeSubArraySum(int target, vector<int> &nums)
          {
                    int sum = 0;
                    int windowStart = 0;
                    int minLength = INT_MAX;
                    for (int windowEnd = 0; windowEnd < nums.size(); windowEnd++)
                    {
                              sum += nums[windowEnd];
                              while (sum >= target)
                              {
                                        minLength = min(minLength, windowEnd - windowStart + 1);
                                        sum -= nums[windowStart];
                                        windowStart++;
                              }
                    }
                    if (minLength == INT_MAX)
                              return 0;
                    else
                              return minLength;
          }
};
int main()
{
          int target = 7;
          vector<int> nums{2, 3, 1, 2, 4, 3};
          cout << MinSizeSubArraySum::minSizeSubArraySum(target, nums) << endl;
}
